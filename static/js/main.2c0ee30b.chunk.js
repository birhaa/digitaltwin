(window.webpackJsonpdigitaltwin=window.webpackJsonpdigitaltwin||[]).push([[0],{17:function(e,n,t){e.exports=t.p+"static/media/bumpmap.d444e896.jpg"},22:function(e,n,t){e.exports=t.p+"static/media/alpha.1c841c4c.jpg"},23:function(e,n,t){e.exports=t.p+"static/media/alpha2.3c2e863c.jpg"},24:function(e,n,t){e.exports=t(32)},29:function(e,n,t){},30:function(e,n,t){},32:function(e,n,t){"use strict";t.r(n);var i=t(9),a=t.n(i),r=t(21),o=t.n(r),s=(t(29),t(30),t(1)),l=(t(31),t(19)),u=t(18),c=t(2);function d(e,n,t,i){l.a.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:t,heightSegments:i},this.fromBufferGeometry(new f(e,n,t,i)),this.mergeVertices()}function f(e,n,t,i,a,r,o){u.a.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:n,widthSegments:t,heightSegments:i};var s,l,d=(e=e||1)/2,f=(n=n||1)/2,v=Math.floor(t)||1,m=Math.floor(i)||1,g=v+1,p=m+1,h=e/v,w=n/m,_=[],b=[],y=[],x=[];for(l=0;l<p;l++){var R=l*w-f;for(s=0;s<g;s++){var S,C=s*h-d;b.push(C,-R,0),y.push(0,0,1),r%2!==0&&o.useOffset?(S=s/v*a+r*a-a,o.mirrorOffset&&(S=r*a-s/v*a)):S=s/v*a+r*a,o.mirror&&(S=1-S),r%2===0&&o.mirrorHalf&&(S=1-S),x.push(S),x.push(1-l/m)}}for(l=0;l<m;l++)for(s=0;s<v;s++){var F=s+g*l,T=s+g*(l+1),E=s+1+g*(l+1),D=s+1+g*l;_.push(F,T,D),_.push(T,E,D)}this.setIndex(_),this.addAttribute("position",new c.b(b,3)),this.addAttribute("normal",new c.b(y,3)),this.addAttribute("uv",new c.b(x,2))}d.prototype=Object.create(l.a.prototype),d.prototype.constructor=d,f.prototype=Object.create(u.a.prototype),f.prototype.constructor=f;var v=t(12),m="#define GLSLIFY 1\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n//BIRGITTE\n\nvarying vec3 lightDir;\nvarying vec3 viewDir;\nuniform float time;\n\n//END BIRGITTE\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t//BIRGITTE\n\tvec3 lightPos = vec3(0.0,0.0,1.0);\n\tvec3 eyePos = vec3(0.0,0.0,1.0);//(viewMatrix * vec4(0.0,0.0,1.0,1.0)).xyz;//cameraPosition;//viewMatrix * vec4(cameraPosition,1.0)).xyz;\n\n\tvec3 viewPos = gl_Position.xyz;\n\tvec3 L = normalize(lightPos - viewPos);\n\tvec3 V = normalize(eyePos- viewPos);\n\tlightDir = L;\n\tviewDir = V;\n\t//END BIRGITTE\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",g="#define GLSLIFY 1\n#define STANDARD\n\n//BIRGITTE UNIFORMS\n\n//Blur\nuniform float blurRadius1;\nuniform float blurRadius2;\nuniform vec2 blurRes1;\nuniform vec2 blurRes2;\n\n//Stripes\nuniform float size;\nuniform bool useOffset;\n\n//Animation\nuniform float time;\nuniform bool playWave;\nuniform float waveSpeed;\nuniform float waveFrequency;\nuniform vec2 waveSize;\n\n//Rainbow\nuniform vec3 rainbow1Dir;\nuniform vec3 rainbow2Dir;\nvarying vec3 lightDir;\nvarying vec3 viewDir;\n\n//END BIRGITTE UNIFORMS\n\n//BIRGITTE METHODS\n\nvec3 bump3y (vec3 x, vec3 yoffset)\n{\n\tvec3 y = vec3(1.,1.,1.) - x * x;\n\ty = saturate(y-yoffset);\n\treturn y;\n}\n\nvec3 spectral_zucconi (float w)\n{\n\t\t// w: [400, 700]\n\t// x: [0,   1]\n\tfloat x = saturate((w - 400.0)/ 300.0);\n\n\tconst vec3 cs = vec3(3.54541723, 2.86670055, 2.29421995);\n\tconst vec3 xs = vec3(0.69548916, 0.49416934, 0.28269708);\n\tconst vec3 ys = vec3(0.02320775, 0.15936245, 0.53520021);\n\n\treturn bump3y (\tcs * (x - xs), ys);\n}\n\n// --- Spectral Zucconi 6 --------------------------------------------\n\n// Based on GPU Gems\n// Optimised by Alan Zucconi\nvec3 spectral_zucconi6 (float w)\n{\n\t// w: [400, 700]\n\t// x: [0,   1]\n\tfloat x = saturate((w - 400.0)/ 300.0);\n\n\tconst vec3 c1 = vec3(3.54585104, 2.93225262, 2.41593945);\n\tconst vec3 x1 = vec3(0.69549072, 0.49228336, 0.27699880);\n\tconst vec3 y1 = vec3(0.02312639, 0.15225084, 0.52607955);\n\n\tconst vec3 c2 = vec3(3.90307140, 3.21182957, 3.96587128);\n\tconst vec3 x2 = vec3(0.11748627, 0.86755042, 0.66077860);\n\tconst vec3 y2 = vec3(0.84897130, 0.88445281, 0.73949448);\n\n\treturn\n\t\tbump3y(c1 * (x - x1), y1) +\n\t\tbump3y(c2 * (x - x2), y2) ;\n}\n\n//START BLUR\n\nvec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n\tvec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture2D(image, uv) * 0.1964825501511404;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvec4 textureWithBlur( bool isMaterial2, vec2 vUv3, sampler2D map){\n\tfloat blurRadius;\n\tvec2 blurRes;\n\tif(isMaterial2){\n\t\tblurRadius = blurRadius2;\n\t\tblurRes = blurRes2;\n\t} else{\n\t\tblurRadius = blurRadius1;\n\t\tblurRes = blurRes1;\n\t}\n\tvec4 texelColor;\n\tif(blurRadius > 0.0){\n\t\tvec4 texelColor1 =  blur(map, vUv3, blurRes, vec2(blurRadius, 0.0));\n\t\tvec4 texelColor2 =  blur(map, vUv3, blurRes, vec2(0.0, blurRadius));\n\t\ttexelColor = (texelColor1 + texelColor2)/2.0;\n\t}else{\n\t\ttexelColor = texture2D( map, vUv3 );\n\t}\n\ttexelColor = mapTexelToLinear( texelColor );\n\treturn texelColor;\n}\n\n//END BLUR\n\nvec2 sineWave(vec2 uv, vec2 phase){\n\tfloat x = sin( waveFrequency*uv.y + waveFrequency*uv.x + 6.28*phase.x) * waveSize.x;\n\tfloat y = cos( waveFrequency*uv.y + waveFrequency*uv.x + 6.28*phase.y) * waveSize.y;\n\treturn vec2(uv.x+x, uv.y+y);\n}\n\nvec2 calculateNewUvs(vec2 vUv, bool isMaterial2){\n\tvec2 vUv3 = vUv;\n\tif( isMaterial2 ){\n\t\tif(useOffset){\n\t\t\tvUv3.x -= 0.01 * size;\n\t\t}\n\t}\n\telse{\n\t\tif(playWave){\n\t\t\tvUv3 = sineWave(vUv3, vec2(time* waveSpeed,0.0));\n\t\t}\n\t}\n\treturn vUv3;\n}\n\nvec3 calculateRainbow(vec3 uv_tangent){\n\tfloat d = 2400.0; //nm\n\n\tvec3 L = lightDir;\n\tvec3 V = viewDir;\n\n\tvec3 H = L + V;\n\tfloat u = abs(dot(uv_tangent, H));\n\n\tif(u > 0.0){\n\t\t// Calculates the reflection color\n\t\tvec3 reflectionColor = vec3(0.0,0.0,0.0);\n\t\tfor (float n = 1.0; n <= 8.0; n++){\n\t\t\tfloat wavelength = u * d / n;\n\t\t\treflectionColor += spectral_zucconi(wavelength);\n\t\t}\n\t\treflectionColor = saturate(reflectionColor)*(1.0-u);\n\t\treturn reflectionColor;\n\t}\n\treturn vec3(0.0,0.0,0.0);\n}\n\n//END BIRGITTE METHODS\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\t//BIRGITTE\n\tfloat nCols = 100.0/size;\n\tbool isMaterial2 = mod(ceil(vUv.x * nCols),2.0) == 0.0;\n\tvec2 vUv3 = calculateNewUvs(vUv,isMaterial2);\n\t//END BIRGITTE\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\n\t//BIRGITTE\n\tvec4 texelColor = textureWithBlur(isMaterial2, vUv3, map);\n\tdiffuseColor *= texelColor;\n\t//END BIRGITTE\n\n\t#include <color_fragment>\n\n\t//BIRGITTE\n\n\tvec3 reflectionColor;\n\tif(isMaterial2) {\n\t\treflectionColor = calculateRainbow(rainbow2Dir);\n\t}else{\n\t\treflectionColor = calculateRainbow(rainbow1Dir);\n\t}\n\tdiffuseColor.rgb = diffuseColor.rgb + reflectionColor;\n\n\t//END BIRGITTE\n\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transparency model\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",p=t(17),h=t.n(p),w=t(22),_=t.n(w),b=t(23),y=t.n(b),x=t(14),R=t(15);v.a.prototype.removeFolder=function(e){var n=this.__folders[e];n&&(n.close(),this.__ul.removeChild(n.domElement.parentNode),delete this.__folders[e],this.onResize())};var S={useOffset:!0,stripes:0,metalness:.4,roughness:.4,ambientIntensity:.2,aoMapIntensity:1,envMapIntensity:1,displacementScale:.1,normalScale:0,color1:16777215,playWave:!1,waveSpeed:1,waveSizeX:0,waveSizeY:0,waveFrequency:1,rainbowX:0,rainbowY:0,rainbowZ:0,blurRadius:0,blurResX:0,blurResY:0},C={useOffset:!0,stripes:0,metalness:0,roughness:0,ambientIntensity:0,aoMapIntensity:1,envMapIntensity:1,displacementScale:0,normalScale:0,color1:16777215,playWave:!1,waveSpeed:1,waveSizeX:0,waveSizeY:0,waveFrequency:1,rainbowX:0,rainbowY:0,rainbowZ:0,blurRadius:0,blurResX:0,blurResY:0},F=function(){function e(n,t,i){Object(x.a)(this,e),this.gui=n,this.name=t,this.settings=i?S:C,console.log(this.settings),this.params={color1:16777215,rainbowX:0,rainbowY:0,rainbowZ:0,blurRadius:0,blurResX:0,blurResY:0}}return Object(R.a)(e,[{key:"initShaderProps",value:function(e,n){var t=this;this.gui.removeFolder(this.name),this.mainFolder=this.gui.addFolder(this.name),this.mainFolder.add(this.settings,"stripes",0,10).onChange((function(){return n.uniforms.size.value=t.settings.stripes})),this.mainFolder.add(this.settings,"useOffset").onChange((function(){return n.uniforms.useOffset.value=t.settings.useOffset})),this.mainFolder.add(this.settings,"metalness").min(0).max(1).onChange((function(n){e.metalness=n})),this.mainFolder.add(this.settings,"roughness").min(0).max(1).onChange((function(n){e.roughness=n})),this.mainFolder.add(this.settings,"displacementScale").min(0).max(3).onChange((function(n){e.displacementScale=n})),this.mainFolder.add(this.settings,"normalScale").min(-1).max(1).onChange((function(n){e.normalScale.set(1,-1).multiplyScalar(n)})),this.mainFolder.addColor(this.settings,"color1").onChange((function(){return e.color.setHex(t.settings.color1)})),this.mainFolder.add(this.settings,"playWave").onChange((function(){return n.uniforms.playWave.value=t.settings.playWave})),this.mainFolder.add(this.settings,"waveSpeed",0,5).onChange((function(){return n.uniforms.waveSpeed.value=t.settings.waveSpeed})),this.mainFolder.add(this.settings,"waveFrequency",0,100).onChange((function(){return n.uniforms.waveFrequency.value=t.settings.waveFrequency})),this.mainFolder.add(this.settings,"waveSizeX",0,.1).onChange((function(){return n.uniforms.waveSize.value.x=t.settings.waveSizeX})),this.mainFolder.add(this.settings,"waveSizeY",0,.1).onChange((function(){return n.uniforms.waveSize.value.y=t.settings.waveSizeY})),this.mainFolder.add(this.settings,"rainbowX",0,1).onChange((function(){return n.uniforms.rainbow1Dir.value.x=t.settings.rainbowX})),this.mainFolder.add(this.settings,"rainbowY",0,1).onChange((function(){return n.uniforms.rainbow1Dir.value.y=t.settings.rainbowY})),this.mainFolder.add(this.settings,"rainbowZ",0,1).onChange((function(){return n.uniforms.rainbow1Dir.value.z=t.settings.rainbowZ})),this.mainFolder.add(this.settings,"blurRadius",0,5).onChange((function(){return n.uniforms.blurRadius1.value=t.settings.blurRadius})),this.mainFolder.add(this.settings,"blurResX",0,1e3).onChange((function(){return n.uniforms.blurRes1.value.x=t.settings.blurResX})),this.mainFolder.add(this.settings,"blurResY",0,1e3).onChange((function(){return n.uniforms.blurRes1.value.y=t.settings.blurResY})),this.folder1=this.mainFolder.addFolder("STRIPE"),this.folder1.add(this.params,"rainbowX",0,1).onChange((function(){return n.uniforms.rainbow2Dir.value.x=t.params.rainbowX})),this.folder1.add(this.params,"rainbowY",0,1).onChange((function(){return n.uniforms.rainbow2Dir.value.y=t.params.rainbowY})),this.folder1.add(this.params,"rainbowZ",0,1).onChange((function(){return n.uniforms.rainbow2Dir.value.z=t.params.rainbowZ})),this.folder1.add(this.params,"blurRadius",0,5).onChange((function(){return n.uniforms.blurRadius2.value=t.params.blurRadius})),this.folder1.add(this.params,"blurResX",0,1e3).onChange((function(){return n.uniforms.blurRes2.value.x=t.params.blurResX})),this.folder1.add(this.params,"blurResY",0,1e3).onChange((function(){return n.uniforms.blurRes2.value.y=t.params.blurResY})),this.mainFolder.open()}},{key:"getSettings",value:function(){return this.settings}}]),e}();v.a.prototype.removeFolder=function(e){var n=this.__folders[e];n&&(n.close(),this.__ul.removeChild(n.domElement.parentNode),delete this.__folders[e],this.onResize())};var T,E,D,I,A,M,z,N,L={nCols:8,nColsMask:8,useOffset:!1,mirror:!1,mirrorHalf:!1,mirrorOffset:!1,mask:!1,animationSpeed:0},B=function(){function e(n,t){Object(x.a)(this,e),this.mainFolder=n.addFolder("MAIN")}return Object(R.a)(e,[{key:"getFolder",value:function(){return this.mainFolder}},{key:"initProps",value:function(e){var n=this;this.mainFolder.add(L,"nCols",1,100,1).onChange((function(){e(n.mainFolder,L)})),this.mainFolder.add(L,"nColsMask",1,100,1).onChange((function(){e(n.mainFolder,L)})),this.mainFolder.add(L,"mirror").onChange((function(){e(n.mainFolder,L)})),e(this.mainFolder,L),this.mainFolder.add(L,"mirrorHalf").onChange((function(){e(n.mainFolder,L)})),e(this.mainFolder,L),this.mainFolder.add(L,"useOffset").onChange((function(){e(n.mainFolder,L)})),e(this.mainFolder,L),this.mainFolder.add(L,"mirrorOffset").onChange((function(){e(n.mainFolder,L)})),this.mainFolder.add(L,"mask").onChange((function(){e(n.mainFolder,L)})),this.mainFolder.add(L,"animationSpeed",0,5,.1),this.mainFolder.open()}},{key:"getSettings",value:function(){return L}}]),e}(),O=!1,U=0,Y=[],P=new v.a;function X(e,n,t,i){var a=t.getSettings(),r=(new s.q).load(h.a),o=(new s.q).load(h.a),l=(new s.q).load(_.a),u=new s.h({depthWrite:!1,depthTest:!1,transparent:!0,alphaMap:l,normalMap:o,displacementMap:r,displacementScale:a.displacementScale,metalness:a.metalness,map:n,color:16777215,side:s.b});return u.onBeforeCompile=function(n){n.uniforms.time={value:e},n.uniforms.size={value:a.stripes},n.uniforms.playWave={value:a.playWave},n.uniforms.waveSpeed={value:a.waveSpeed},n.uniforms.waveFrequency={value:a.waveFrequency},n.uniforms.waveSize=new s.r(new s.s(a.waveSizeX,a.waveSizeY)),n.uniforms.useOffset={value:a.useOffset},n.uniforms.rainbow1Dir=new s.r(new s.t(a.rainbowX,a.rainbowY,a.rainbowZ)),n.uniforms.blurRadius1={value:a.blurRadius},n.uniforms.blurRes1=new s.r(new s.s(a.blurResX,a.blurResY)),n.vertexShader=m,n.fragmentShader=g,Y.push(n),t.initShaderProps(u,n)},u}var G=function(){var e=new s.n,n=new s.j(75,window.innerWidth/window.innerHeight,.1,1e3);n.position.z=4;var t=new s.v({antialias:!0});t.setClearColor("#000000"),t.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(t.domElement);!function i(){if(requestAnimationFrame(i),null!=document.getElementById("video")&&!O){T=(new Date).getTime();var a=function(){var e=document.getElementById("video"),n=new s.u(e);return n.minFilter=s.e,n.magFilter=s.e,n.format=s.m,function(e){if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){navigator.mediaDevices.getUserMedia({video:{width:1280,height:720,facingMode:"user"}}).then((function(n){e.srcObject=n,e.play()})).catch((function(e){console.error("Unable to access the camera/webcam.",e)}))}else console.error("MediaDevices interface not available.")}(e),n}();I=new B(P,"MAIN"),A=new F(I.getFolder(),"MATERIAL 1",!0),M=new F(I.getFolder(),"MATERIAL 2",!1),z=new F(I.getFolder(),"MASK MATERIAL 1"),N=new F(I.getFolder(),"MASK MATERIAL 2"),I.initProps((function(n,t){!function(e,n,t,i){E&&t.remove(E);D&&t.remove(D);E=new s.i;var a=X(T,e,A),r=X(T,e,M);a.transparent=!1,r.transparent=!1;for(var o=i.nCols,l=1/o,u=6*l,c=0;c<o;c++){var d=new f(u,4,32,32,l,c,i),v=c%2==0?a:r;(b=new s.g(d,v)).translateX(c*u),E.add(b)}if(i.mask){var m=i.nColsMask,g=1/m,p=6*g,h=X(T,e,z),w=X(T,e,N),_=(new s.q).load(y.a);h.alphaMap=_,w.alphaMap=_,h.transparent=!0,w.transparent=!0,D=new s.d;for(c=0;c<m;c++){var b;d=new f(p,4,32,32,g,c,i),v=c%2==0?h:w;(b=new s.g(d,v)).translateX(c*p),D.add(b)}D.translateX(p/2-3),U=D.position.x,t.add(D)}E.translateX(u/2-3),t.add(E)}(a,0,e,t)}));var r=new s.a(16777215);e.add(r);var o=new s.k(16777215,1,80);o.position.set(0,0,50),e.add(o),O=!0}var l=(new Date).getTime();Y.forEach((function(e){e.uniforms.time.value=(l-T)/1e3})),D&&((D.position.x-U>2||D.position.x-U<-2)&&(I.getSettings().animationSpeed=-I.getSettings().animationSpeed),D.translateX(I.getSettings().animationSpeed/100)),t.render(e,n)}()};var k=function(){return G(),a.a.createElement("div",{className:"App"},a.a.createElement("video",{id:"video",autoPlay:!0,style:{display:"none"}}))};o.a.render(a.a.createElement(k,null),document.getElementById("root"))}},[[24,1,2]]]);
//# sourceMappingURL=main.2c0ee30b.chunk.js.map